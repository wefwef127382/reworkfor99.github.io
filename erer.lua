--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,x,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=101,79,86,60,17,52,38,37,97,26,43,37,47,88,25,27,15,72,65,12,30,48,85,12,91,91,79,75,41,55,16,74,76,82,73,15,28,14,98,14,89,88,10,94,68,57,31,55,22,91,49,64 while x~=64 do if y>=788 then if y<=1124 then if y>=967 then if y>=1080 then if y>=1106 then if y>1108 then z=function()local x do x=bu(bt,bj,bj)end bj=(bj+1);return x;end y=1148 else bk=function()local x,cm,cn,co cn,co,cm,x=bu(bt,bj,(bj+3))do bj=(bj+4);end return((x*16777216)+(cm*65536)+(co*256)+cn);end y=1124 end else bj=1 y=1106 end else if y>=1011 then if y>1016 then do bh=function(x,cm,cn,co)local co co=((x/2^(cm-1))%2^((cn-1)-(cm-1)+1))return(co-co%1);end end y=1080 else y=1052 ca=(bit_lib and bit_lib.bxor or function(x,cm)x=x%(2^l)cm=cm%(2^32)local l,cn=0,1 while x>0 and cm>0 do local co,cp=x%16,cm%16 l=l+bl[co+1][cp+1]*cn x=(x-co)/16 cm=(cm-cp)/16 cn=cn*16 end l=l+x*cn+cm*cn return l end)end else bd=function(l,x,cm,cn,cn)local cn,co,cp=48,33,15,83,75,49,34,19,81,68,96,47,75 while cn~=34 do if co<=87 then if co>=70 then if co<81 then cp=nil co=87 else co=132 cp=((x/bx[l])%bx[cm])end else cp=nil co=70 end else if co<=132 then co=174 cp=(cp-cp%1)else if co<194 then co=199 do return cp end else break end end end end end y=1011 end end else if y<=804 then if y<796 then y=804 do by=''end else y=845 bs=(2^52)end else if y<=845 then bx={[0]=1}y=880 else if y<917 then y=924 bc=2 else y=967 for l=1,31 do bx[l]=bc bc=(bc*2)end end end end end else if y<=1262 then if y>=1192 then if y>=1219 then if y>1226 then bm={}y=1290 else ba=function(...)do return{...},ch('#',...)end end y=1262 end else ci=function(l,l,l,l)local l,x,cm,cn=58,55,66,69,44,21,89,33,52,87,45,48,66 while l~=41 do if x<=143 then if x<=55 then x=102 cm,cn=nil else if x>106 then cn=bt:sub(bj,(bj+cm-j))x=163 else cm=bk()x=143 end end else if x>=185 then if x>187 then break else x=229 do return cn;end end else bj=(bj+cm);x=185 end end end end y=1219 end else if y>1151 then bp=function()local j,l,x,cm,cn,co,cp,cq=57,45,59,27,80,59,66,72,41,86,67,19,67,98,25,54,46,10 while j~=33 do if l<=163 then if l<=64 then if l<59 then x,cm,cn,co,cp,cq=nil l=64 else cp=bk()l=99 end else if l<=99 then cn=bk()l=128 else if l>132 then l=201 cq=((-1)^bd(31,cn,1))else l=163 while(cp==0 and cn==0)do return 0 end end end end else if l<=265 then if l>=245 then if l>253 then x=1 l=313 else l=265 cm=(bd(0,cn,20)*4294967296+cp)end else l=245 co=bd(20,cn,11)end else if l<=313 then l=348 if not(co~=0)then if 0~=cm then co=1 x=0 else return(cq*0)end elseif not(co==2047)then else if c==cm then do return(cq*(f/0))end else return(cq*(1/0))end end else if l<372 then l=375 return(cq*(q^(co-1023))*(cm/bs+x))else j=33;end end end end end end y=1192 else y=1170 cg=function()local c,f do c,f=bu(bt,bj,(bj+2))end bj=(bj+2);return((f*256)+c);end end end else if y<=1336 then if y>=1306 then if y>1309 then y=1356 bv={}else y=1336 bq={}end else y=1306 bn=function(c,f,f,f)local f,j,l,q,x,cm,cn,co=74,66,95,21,26,74,87,68,52,90,97,40,43,89,93,90,26,30,53,40,40,78,77,67 while f~=36 do if j<=262 then if j>=167 then if j>=240 then if j<253 then j=262 for f=1,bk()do cm[f-1]=bn();end else j=303 l[53]=cm;end else if j>174 then for f=(#bm+1),(#bm+x)do local cp,cq,cr,cs,ct=74,52,93,86,55,80,39,28,85,64,48,49,22,90,77,21,75,30,98,26,22,28,86 while cp~=53 do if cq>=279 then if cq<=369 then if cq>=345 then if cq<360 then ct[138]=bh(cr,21,29);cq=369 else cq=401 ct[4]=bh(cs,12,33);end else if cq>288 then ct[119]=bh(cr,12,20);cq=345 else cq=312 ct[160]=bh(cr,3,11);end end else if cq<=436 then if cq>408 then ct[93]=-ct[138]cq=485 else cq=436 ct[127]=-ct[160]end else if cq<491 then cq=500 bm[f]=ct;else break end end end else if cq<=129 then if cq>=99 then if cq<127 then cq=129 ct[49]=z();else cq=172 cr=bk()end else if cq<63 then cr,cs,ct=nil cq=72 else ct={}cq=99 end end else if cq<=208 then if cq<204 then cq=208 cs=bk()else cq=227 ct[20]=z();end else if cq>229 then cq=279 ct[99]=bh(cs,1,11);else cq=260 ct[31]=bh(cr,1,2);end end end end end end j=240 else j=212 x=bk()end end else if j<=83 then if j<79 then j=83 l,q,x,cm,cn,co=nil else j=100 cn={}end else if j<125 then do cm={}end j=134 else j=167 l={}end end end else if j<=396 then if j>=355 then if j>364 then co={}j=419 else j=396 q=bk()end else if j>311 then l[151]=cn;j=355 else j=330 for f=1,bk()do local x,cm,cp,cq,cr,cs=58,47,53,32,61,42,53,46,94,71,92,49,77,69,26,37,70,56,60,11,46,71,20,42,29 while x~=40 do if cm<=242 then if cm>=136 then if cm>=200 then if cm<=200 then do cq=bk()end cm=224 else if cm<233 then cm=242 cr=bh(cp,1,2)else cs[31]=cr cm=286 end end else if cm>145 then cp=bk()cm=200 else cm=175 do while z()==1 do for ct=1,z()do cs[143][ct]={z()==0,bk()}end break end end end end else if cm<=63 then if cm>50 then cs={{},nil,nil,nil}cm=90 else cm=63 cp,cq,cr,cs=nil end else if cm>93 then cm=136 cs[143]={};else cm=108 cs[49]=z();end end end else if cm<=391 then if cm>=373 then if cm>379 then cm=425 cs[138]=bh(cp,21,29);else cs[4]=bh(cq,12,33);cm=391 end else if cm>294 then cs[160]=bh(cp,3,11);cm=373 else cm=329 cs[99]=bh(cq,1,11);end end else if cm>=477 then if cm>=493 then if cm<537 then cm=542 cn[f]=cs;else x=40;end else cs[93]=-cs[138]cm=493 end else if cm<442 then cs[20]=bh(cp,12,20);cm=451 else cm=477 cs[127]=-cs[160]end end end end end end end end else if j<=440 then if j>428 then l[55]=co j=480 else for f=1,q do local q,x,cm,cn=57,63,41,93,17,31,59,61,76,96,88,14,89 while q~=35 do if x>=160 then if x>=184 then if x>189 then break else x=216 co[f]=cm;end else x=184 do if(not(cn~=1))then cm=(not(z()==0));elseif(3==cn)then cm=bp();elseif(not(cn~=2))then do cm=ci();end elseif(not(cn~=0))then cm=c[ci()];end;end end else if x<=63 then cm,cn=nil x=82 else if x<110 then x=112 cn=z()else x=160 do cm=nil end end end end end end j=440 end else if j<=480 then l[29]=z();j=524 else if j>532 then break else j=544 return l;end end end end end end end end else if y<=1356 then y=1392 bf=function(c,f,j,l,l)local l,q,x,cm,cn cm=c[55]x=bq do l=c[151]end q=c[29]do cn=c[53]end return function(...)local c,x,co,cp,cq,cr,cs,ct,cu cp=1 do ct=-1 end cu=-1 cr={}cq={...}co=(ch('#',...)-1)x={}do c={}end for cu=0,co do if(not(cu<q))then cr[(cu-q)]=cq[(cu+1)];else do c[cu]=cq[(cu+1)];end end;end;cs=(co-q+1)while true do local cs,cu,cv,cw,cx,cy,cz,da,db,dc cx=l[cp]do cs=cx[99]end do cy=cx[49]end cw=cx[160]do cv=cx[119]end do cu=cx[138]end db=cx[20]cz=cx[127]dc=cx[4]da=cx[93]if not(cs<48)then if not(cx[99]>71)then if not(cs<60)then if not(cs<g)then if not(cx[99]<69)then if not(cs>69)then c[cw]=c[dc][c[cu]];else if not(cx[99]~=70)then while(c[cx[160]])do cp=dc;break end else local g,cy,dd,de cy=cw de={c[cy]()}dd=cu g=0 for df=cy,dd do g=(g+1);c[df]=de[g];end end end else do if not(cs<67)then if 67==cs then local g,cy,dd,de de=cw cy=((cu-1)*50)dd=c[de]g=dc for df=1,g do dd[(cy+df)]=c[(de+df)]end;else l[cp]=bm[db];cp=dc;end else local g,cy cy=cw g=c[dc]c[(cy+1)]=g;do c[cy]=g[cm[cu]];end end end end else if not(cs<63)then if not(cs>63)then bq[cw]=c[cx[119]]else if(cs<65)then c[cx[160]]=(c[dc]^c[cu]);else bq[cw]=bq[cv]end end else if not(cs>60)then c[cw]=c[dc];else do if(cx[99]<62)then c[da]=(function()c[cx[160]]=bf(cn[cv],nil,j);end)else c[da]=(function()c[cw]=bf(cn[cv],nil,j);end)end end end end end else if not(cs>53)then if not(cs>50)then do if not(cs<49)then if(cs<50)then c[cw]();else do c[cx[160]]=-c[dc];end end else if(not(c[cw]<c[cu]))then cp=dc;end;end end else if not(cs<52)then if(cs>52)then c[cw]=(c[dc]%c[cu]);else do j[cm[dc]]=c[cw];end end else local g,cy,dd do g=cn[dc]end do cy=nil end dd={}cy=bg({},{__index=function(de,de)local de=dd[de];return de[1][de[2]];end,__newindex=function(de,de,df)local de=dd[de]de[1][de[2]]=df;end;});for de=1,cx[138]do local df df=cx[143][de]do if df[1]then dd[(de-1)]={c,df[p],nil,nil};else dd[(de-1)]={f,df[2],nil,nil,nil,nil};end;end x[(#x+1)]=dd;end;c[cw]=bf(g,cy,j);end end else if not(cs>56)then do if not(cs>54)then do c[cx[160]]=j[cm[cx[4]]][cm[cx[138]]];end else if 55==cs then c[cw][c[dc]]=c[cu];else do return c[cz][db]end end end end else if not(cs<58)then do if not(cs~=58)then l[cp]=bm[db];cp=dc;else do c[cw]=(c[dc]+cm[cu]);end end end else if cw then do cx[s]=false;end do cx[138]=cx[4];end cp=(cp-1);else cp=(cp+dc+cu);end end end end end else if not(cs>83)then if not(cs>77)then do if not(cs>74)then if not(cs>72)then local g,p do p=cw end g=c[dc]c[(p+1)]=g;c[p]=g[c[cu]];else if(cs>73)then while(cm[cx[160]]<c[cu])do cp=dc;break end else local g g=c[cz][db]do c[cz][cx[20]]=(g..c[cu]);end end end else do if not(cs<76)then do if 76==cx[99]then local g do g=cw end do do return bz(c,g,(g+dc))end end;else end end else c[cw]=c[cx[4]][cm[cx[138]]];end end end end else if not(cs<81)then if not(cs<82)then if(cx[99]<83)then c[cw]=(c[dc]/c[cu]);else c[cx[160]]=cm[dc]end else local g,p p=cx[160]do g={}end if(#x>0)then do for s=1,#x do local cy cy=x[s]do for s=0,#cy do local cz,db,dd db=cy[s]cz=db[1]dd=db[2]if(cz==c and dd>=0)then do g[dd]=cz[dd]end db[1]=g end end end end end end return bz(c,p,ct);end else if not(cs>78)then c[cw]=(c[dc]/cm[cx[138]]);else if(cs>79)then local g,p g=cw p={}if(#x>0)then for s=1,#x do local cy cy=x[s]do for s=0,#cy do local cz,db,dd cz=cy[s]dd=cz[1]db=cz[2]while(dd==c and db>=0)do p[db]=dd[db]cz[1]=p break end end end end end return c[g],c[(g+1)]else do c[cw]=f[dc];end end end end end else if not(cs>89)then if not(cs>86)then if not(cs<85)then if(cx[99]<86)then local g,p p=cw g=dc for s=p,g do do c[s]=cr[(s-p)];end end;else local g g=cw c[g]=c[g](bz(c,g+1,dc));end else c[cx[160]]=nil;end else if not(cs<88)then if(cs<89)then local g g=cw c[g]=c[g](c[g+1]);else c[cw]=c[dc]end else local g,p do g,p=ba(...)end for p=1,cw do c[(p-1)]=g[p]end end end else if not(cs<93)then if not(cs<95)then if 95==cs then local g g=cw c[g](bz(c,(g+1),dc))else c[cw][cm[dc]]=cm[cu];end else if 93==cx[99]then while not c[cu]do c[cw]=c[cu];cp=dc;break end else do c[cw]=bq[cv]end end end else if not(cs<91)then if(cs<92)then local g g=cw c[g](bz(c,(g+k),ct))else cp=((cm[cx[160]]<c[cu])and dc or cp)end else c={};for g=0,co do if(g<q)then do c[g]=cq[(g+1)];end else break end;end;end end end end end else if not(cs>23)then if not(cs<12)then if not(cs>17)then do if not(cs<15)then if not(cs>15)then c[cw]={};else do if(cs<17)then bq[cw]={}else c[cx[160]]=j[cm[dc]];end end end else if not(cs<13)then if not(cs~=13)then cm=bq[cw](cm)else local g,k,p,q,s q=cx[160]p=cu s=(q+2)k={c[q](c[q+1],c[s])}for co=1,p do do c[(s+co)]=k[co]end end g=c[(q+3)]do if g then c[s]=g else do cp=dc;end end;end end else ct=cx[cx[160]];end end end else if not(cs>20)then if not(cs>18)then local g,k,p g=cx[160]do k=c[g]end p=dc for q=1,p do k[q]=c[(g+q)]end;else if(cs<20)then else c[cw][cm[cx[4]]]=c[cu];end end else if not(cx[99]>21)then c[cw]=(c[dc]-c[cx[138]]);else if(cs<23)then l[cp]={[4]=26,[99]=cs- -11,[138]=27,[160]=21,[20]=0};do cp=(cp-1);end elseif(c[cu]~=c[cw])then cp=cx[4];end end end end else if not(cs>5)then if not(cs<3)then if not(cs<4)then if 4==cx[99]then c[cw]=bf(cn[dc],nil,j);else c[cx[160]]=(c[dc]+c[cu]);end else cp=((c[cx[160]]~=c[cu])and dc or cp)end else do if not(cs<1)then if(cs<2)then do for g=cw,dc do c[g]=nil;end;end else cp=cx[4];end else local g,k,l,p g=cw p,l=ba(c[g](bz(c,(g+1),dc)))ct=(l+g-1)do k=0 end do for l=g,ct do do k=(k+1);end c[l]=p[k];end;end end end end else if not(cx[99]>8)then do if not(cs>6)then f[dc]=c[cw];else if not(cs~=7)then do bq[cx[160]]()end else local f,g,k,l k=cw g,l=ba(c[k](c[(k+1)]))ct=(l+k-1)f=0 for l=k,ct do f=(f+1);c[l]=g[f];end;end end end else do if not(cs>9)then local f,g g=cx[160]f={}for k=1,#x do local l l=x[k]for k=0,#l do local p,q,s q=l[k]do p=q[i]end s=q[2]if(p==c and s>=g)then f[s]=p[s];q[1]=f;end;end;end;else if(cs>10)then local f f=cw c[f]=c[f](bz(c,f+1,ct));else c[cw]=(not c[cx[4]]);end end end end end end else if not(cs<36)then if not(cs<42)then if not(cs<45)then do if not(cs<46)then if(cs>46)then local f do f=cw end do do return c[f](bz(c,(f+1),dc))end end;else local f,g,i i=cw do g=c[(i+2)]end f=(c[i]+g)c[i]=f;if((g>0))then if(not(f>c[i+1]))then cp=dc;do c[(i+3)]=f;end end elseif(not(f<c[i+1]))then cp=cx[4];c[(i+3)]=f;end end else c[cw]=#c[dc];end end else if not(cs<43)then if(cx[99]>43)then j=c[cx[cx[e]]]else do c[cx[160]]=(0~=dc);end do cp=(cp+1);end end else if not c[cw]then cp=cx[4];end;end end else if not(cs>38)then if not(cs>36)then local e do e={}end if(#x>0)then for f=1,#x do local g g=x[f]for f=0,#g do local i,j,k k=g[f]j=k[1]i=k[2]do if(j==c and i>=0)then e[i]=j[i]do k[1]=e end end end end end end return 1,cs;else if(cs<38)then if(cm[cx[138]]~=c[cw])then cp=dc;end;else c[cx[cw]]=c end end else if not(cs<40)then do if not(cs~=40)then local e,f,g f=cw do g=c[f]end e=c[(f+2)]if((e>0))then if((g>c[f+1]))then cp=cx[4];else c[(f+3)]=g;end elseif((g<c[f+1]))then cp=dc;else c[(f+a)]=g;end else local a,e,f a=cw do f={c[a](bz(c,a+1,cx[4]))}end e=0 for g=a,cu do e=(e+1);c[g]=f[e];end end end else do c[cw]=(c[dc]%cm[cu]);end end end end else do if not(cx[99]<30)then do if not(cs>32)then do if not(cx[99]>30)then c[cw]=(c[dc]*c[cu]);else do if 31==cs then do do return c[cw]end end else c[cw]=(c[dc]*cm[cu]);end end end end else if not(cs>b)then local a,b b=dc a=c[b]for e=(b+1),cu do a=(a..c[e]);end;c[cw]=a;else do if not(cs~=34)then do if((c[cx[160]]>c[cu]))then cp=dc;end;end else end end end end end else if not(cs>26)then if not(cs>24)then local a a=cw c[a](c[(a+1)])else if(cs<26)then bq=c else do if((c[cw]<c[cu]))then cp=cx[4];end;end end end else if not(cs>27)then c[da]();else if(cs>28)then c[cw]=bq[cv]else local a,b,e e=cw a={c[e](c[e+1])}do b=0 end for f=e,cu do do b=(b+1);end c[f]=a[b];end end end end end end end end end do cp=(cp+1);end end;end;end else if y>1396 then break else y=1432 do return bf(bn(cf()),{},cf())();end end end end end end else if y<=384 then if y>=232 then if y<=304 then if y<=232 then y=272 do bi=string.rep end else if y<295 then ce=table.concat y=304 else y=329 cj=table.insert end end else if y<=329 then y=355 cd=math.ldexp else if y<382 then y=384 do cf=(getfenv or function()return _ENV end)end else y=400 bg=setmetatable end end end else if y<=98 then if y<94 then z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil y=98 else bu=string.byte y=137 end else if y>=182 then if y>184 then ck=string.gsub y=232 else y=198 do bb=string.sub end end else cl=string.char y=182 end end end else if y>=580 then if y>=689 then if y>=706 then if y>713 then y=788 do bl={{0,1,2,3,4,5,6,7,8,9,10,11,12,d,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,m,4,5,10,11,8,9,14,15,12,13,},{u,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,r,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,n,0,1,14,15,12,13,10,o,8,9,},{7,6,5,h,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,t,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,v,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,w,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else bt=ckfunction(a,b,b)return bw[cb(a,16)]end)y=748 end else y=706 for a=0,255 do bw[a]=cl(a);end end else if y>=609 then if y<650 then cb=tonumber y=654 else bw={}y=689 end else y=609 bz=(unpack or table.unpack)end end else if y>=482 then if y<=482 then do be=(function(a,b,b)if not(bo(a)~='number')then return true else do return false end end end)end y=523 else if y>532 then y=580 cc=math.floor else y=562 do br=math.abs end end end else if y>407 then bo=type y=482 else ch=select y=437 end end end end end end end)(3,33,0,13,160,0,66,4,1,1,1,32,7,3,11,2,2,0,160,2,3,12,9)
