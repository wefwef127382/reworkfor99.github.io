--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,be,be,be)local be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=104,74,76,24,29,78,64,47,19,22,72,81,62,82,78,69,62,82,34,99,77,70,19,24,44,49,49,17,71,93,24,17,28,41,15,92,55,50,71,42,84,37,34,36,13,58,94,90,47,13,10 while be~=70 do if bf>=800 then if bf<=1167 then if bf<=948 then if bf>=883 then if bf<=883 then bf=911 do bn={[0]=1}end else if bf>917 then bf=993 for ct=1,31 do bn[ct]=bq bq=(bq*2)end else bf=948 bq=2 end end else if bf<832 then bf=835 ch=''else bf=883 do bz=(2^52)end end end else if bf>=1087 then if bf>=1125 then if bf<1162 then co=function()local ct,cu,cv,cw cu,ct,cv,cw=bv(bs,ca,(ca+3))ca=(ca+4);return((cw*16777216)+(cv*65536)+(ct*256)+cu);end bf=1167 else bf=1206 do cj=function()local ct do ct=bv(bs,ca,ca)end do ca=(ca+1);end return ct;end end end else ca=1 bf=1125 end else if bf>=1030 then if bf<1058 then bu=(bit_lib and bit_lib.bxor or function(ct,cu)ct=ct%(2^32)cu=cu%(2^32)local cv,cw=0,1 while ct>0 and cu>0 do local cx,cy=ct%16,cu%16 cv=cv+cb[cx+bd][cy+1]*cw ct=(ct-cx)/16 cu=(cu-cy)/16 cw=cw*16 end cv=cv+ct*cw+cu*cw return cv end)bf=1067 else by=function(bd,ct,cu,cv,cv)local cv cv=((bd/2^(ct-1))%2^((cu-1)-(ct-1)+1))return(cv-cv%1);end bf=1087 end else bg=function(bd,ct,cu,cv,cv,cv)local cv,cw,cx=57,30,20,28,22,88,98,89,26,47,59,95,26,91 while cv~=43 do if cw<=78 then if cw>=58 then if cw<70 then cw=78 cx=nil else cx=((ct/bn[bd])%bn[cu])cw=117 end else cx=nil cw=58 end else if cw>=157 then if cw>163 then cv=43;else cw=196 return cx end else cw=157 cx=(cx-cx%1)end end end end bf=1030 end end end else if bf>=1316 then if bf<=1362 then if bf>=1343 then if bf<1358 then br={}bf=1362 else bf=1392 bl={}end else do bo=function(bd,ct,ct)local ct,cu,cv,cw,cx,cy,cz,da=78,80,34,37,88,71,30,34,83,61,78,51,31,47,17,88,13,66,11,77,36,58,32,76,32 while ct~=40 do if cu>=375 then if cu<=474 then if cu>=446 then if cu>453 then cy[183]=cv;cu=520 else for db=1,co()do cv[db-1]=bo();end cu=474 end else if cu<417 then cu=422 for db=1,cx do local dc,dd,de,df=50,44,64,83,22,62,81,25,94,73,21,66,61 while dc~=27 do if dd<=108 then if dd<=44 then de,df=nil dd=66 else if dd<100 then de=cj()dd=108 else dd=145 df=nil end end else if dd>=165 then if dd>170 then dc=27;else dd=214 cw[db]=df;end else dd=165 do if(2==de)then do df=(not(cj()==0));end elseif(not(de~=3))then df=bm();elseif(1==de)then df=cd();elseif(not(de~=0))then do df=bd[cd()];end end;end end end end end else cu=446 cy[101]=cw end end else if cu<=553 then if cu<547 then cu=553 for bd=1,co()do local db,dc,dd,de,df,dg=83,44,58,63,23,58,94,71,35,32,18,80,56,66,48,33,75,80,90,88,52,14,42,47,53,91 while db~=43 do if dc>=298 then if dc<=395 then if dc>=376 then if dc>385 then do dg[138]=by(df,21,29);end dc=441 else dc=395 dg[57]=by(dd,12,33);end else if dc<326 then dc=334 dg[31]=by(dd,1,11);else dg[123]=by(df,3,11);dc=376 end end else if dc<=457 then if dc>443 then dg[92]=-dg[123]dc=486 else dc=457 dg[199]=by(df,12,20);end else if dc<=486 then dg[94]=-dg[138]dc=504 else if dc>506 then break else dc=543 cz[bd]=dg;end end end end else if dc<=155 then if dc>=134 then if dc>142 then dg[68]={};dc=183 else dc=155 dg[38]=cj();end else if dc<81 then dc=88 dd,de,df,dg=nil else dc=134 dg={{},nil,nil}end end else if dc<=212 then if dc<203 then dc=212 if 1==cj()then for bd=1,cj()do dg[68][bd]={cj()==0,co()}end end else dc=240 df=co()end else if dc<=240 then dc=258 do dd=co()end else if dc<276 then dc=281 de=by(df,1,2)else dc=298 do dg[165]=de end end end end end end end end else cu=568 do cy[135]=cz;end end else if cu>=591 then if cu>600 then ct=40;else cu=640 return cy;end else cu=591 cy[180]=cj();end end end else if cu>=213 then if cu<=261 then if cu<256 then cu=261 da=co()else cu=280 for bd=(#bp+1),(#bp+da)do local ct,db,dc,dd,de=73,62,21,22,95,28,20,82,28,20,66,85,65,21,38,78,19,36,23,83,56,64 while ct~=41 do if db<=294 then if db<=167 then if db>=135 then if db<159 then db=167 dc[38]=cj();else do dd=co()end db=211 end else if db<91 then dc,dd,de=nil db=96 else do dc={}end db=135 end end else if db<=249 then if db<240 then do de=co()end db=249 else db=272 dc[199]=cj();end else if db<292 then dc[t]=by(dd,1,2);db=294 else dc[31]=by(de,1,11);db=311 end end end else if db<=401 then if db<=350 then if db>317 then dc[35]=by(dd,12,20);db=376 else dc[123]=by(dd,3,11);db=350 end else if db<398 then dc[f]=by(dd,21,29);db=401 else do dc[57]=by(de,12,33);end db=428 end end else if db>=473 then if db<508 then db=515 bp[bd]=dc;else ct=41;end else if db>431 then dc[94]=-dc[138]db=473 else db=454 do dc[92]=-dc[123]end end end end end end end end else if cu>283 then cu=375 do cw={}end else cu=328 cx=co()end end else if cu<=99 then if cu>85 then cu=148 do cz={}end else cu=99 cv,cw,cx,cy,cz,da=nil end else if cu>156 then do cy={}end cu=213 else cv={}cu=193 end end end end end end end bf=1343 end else if bf<=1392 then cr=function(f,t,bd,ct,ct,ct)local ct,cu,cv,cw,cx ct=f[180]cv=f[183]cx=f[101]do cw=br end cu=f[135]return function(...)local f,cw,cy,cz,da,db,dc,dd,de db=1 da=-1 cw=-1 de={}dc={...}cz=(bj('#',...)-1)do dd={}end f={}for cw=0,cz do do if(not(cw<ct))then de[(cw-ct)]=dc[(cw+1)];else do f[cw]=dc[(cw+1)];end end;end end;do cy=(cz-ct+1)end while true do local cw,cy,df,dg,dh,di,dj,dk,dl,dm cy=cu[db]df=cy[31]cw=cy[38]dl=cy[123]dk=cy[35]dg=cy[138]dm=cy[199]di=cy[92]dh=cy[57]dj=cy[94]if not(cy[31]>bc)then do if not(df<25)then do if not(df>36)then do if not(df<31)then if not(df<34)then if not(df>34)then do br[dl]()end else if not(df~=35)then do f[dl]=br[cy[35]]end else local bc,cw,dn cw=dl bc={f[cw](cs(f,cw+1,dh))}dn=0 for _do=cw,dg do dn=(dn+1);f[_do]=bc[dn];end end end else if not(df<32)then if 32==df then f[dl]();else f[dl]=t[dh];end else do cu[db]={[31]=df- -23,[57]=3,[138]=22,[123]=14,[199]=0};end db=(db-1);end end else if not(df>27)then do if not(df>25)then cu[db]={[57]=5,[31]=df-13,[138]=0,[199]=0,[123]=4};db=(db-1);else if(df>26)then da=cy[dl];else local bc,cw,dn dn=dl do cw=f[(dn+2)]end do bc=(f[dn]+cw)end f[dn]=bc;if((cw>0))then if(not(bc>f[dn+1]))then do db=cy[57];end f[(dn+3)]=bc;end elseif(not(bc<f[dn+1]))then do db=dh;end f[(dn+3)]=bc;end end end end else do if not(cy[31]<29)then if 29==df then f[dl]=br[dk]else f[dl]=f[dh]end else f[dl][cx[cy[57]]]=f[cy[ba]];end end end end end else if not(cy[31]>42)then if not(cy[31]>39)then if not(df<38)then if(df<39)then local ba,bc bc=dl ba={}for cw=1,#dd do local dn dn=dd[cw]for cw=0,#dn do local _do,dp,dq _do=dn[cw]dp=_do[1]do dq=_do[2]end do while dp==f and dq>=bc do ba[dq]=dp[dq];_do[1]=ba;break end end end;end;else cu[db]={[199]=0,[y]=1,[123]=1,[31]=df-29,[138]=h};db=(db-1);end else local h,y,ba,bc,cw do y=cy[123]end bc=dg h=(y+2)ba={f[y](f[y+1],f[h])}for dn=1,bc do f[(h+dn)]=ba[dn]end cw=f[(y+3)]if cw then f[h]=cw else db=dh;end;end else do if not(df>40)then f[dl]=(f[dh]+cx[dg]);else do if(df>41)then if f[dl]then db=dh;end;else local h,y y=cy[123]h=f[dh]do f[(y+1)]=h;end f[y]=h[f[dg]];end end end end end else do if not(df>45)then if not(df<44)then if not(df~=44)then f[dl]=-f[dh];else if cy[123]then cy[123]=false;dg=dh;db=(db-1);else db=(db+dh+dg);end end else do br[cy[123]]=br[dk]end end else do if not(df<48)then if(cy[31]>48)then while(f[dl]~=cx[cy[138]])do db=dh;break end else do f[dl]=#f[cy[57]];end end else do if(df<b)then t[cy[57]]=f[dl];else local b,h,y,ba y=cy[123]ba,h=cm(f[y](cs(f,(y+1),dh)))da=(h+y-1)b=0 for h=y,da do b=(b+1);f[h]=ba[b];end;end end end end end end end end end else if not(df>11)then if not(df<6)then if not(df>8)then do if not(df>6)then f[dl][cx[dh]]=cx[dg];else if 7==df then local b b=dl do return f[b](cs(f,(b+1),dh))end;else local b,h b=dl do h=dh end do for y=b,h do f[y]=de[(y-b)];end;end end end end else if not(df<10)then if(df>10)then do f[dl]=cr(cv[dh],nil,bd);end else f[dl]=cx[cy[57]]end else f[dl]=nil;end end else if not(df<3)then if not(df<4)then if(cy[31]<m)then f[cy[dl]]=f else do f[dl]=(f[dh]-f[dg]);end end else local b,h,m m=dl h=f[m]b=f[(m+2)]if((b>0))then do if((h>f[m+1]))then do db=dh;end else f[(m+3)]=h;end end elseif((h<f[m+1]))then db=dh;else f[(m+3)]=h;end end else if not(df>0)then do f[dl]=(f[dh]%cx[dg]);end else if 1==df then f[dl]=(f[dh]/cx[dg]);else end end end end else if not(df>17)then if not(df>14)then do if not(cy[31]>12)then do f[cy[123]]=bd[cx[cy[57]]];end else if(df<14)then cu[db]=bp[cy[199]];db=dh;else cu[db]={[123]=0,[199]=0,[31]=df- -64,[138]=1,[57]=0};db=(db-1);end end end else if not(df>15)then local b,h do b,h=cm(...)end for h=1,dl do f[(h-1)]=b[h]end else if(df>16)then local b do b=dl end f[b]=f[b](cs(f,b+1,dh));else do f[dl]=(f[cy[57]]%f[cy[138]]);end end end end else if not(cy[31]<21)then do if not(df<23)then if(df>23)then if((f[dl]<f[dg]))then db=dh;end;else f[dl]=(f[dh]*cx[dg]);end else if not(df~=21)then bd[cx[dh]]=f[cy[123]];else do db=((f[dl]~=f[dg])and dh or db)end end end end else if not(df>s)then f[cy[123]]=f[cy[57]];else do if(df<20)then f[dj]=(function()f[dl]=cr(cv[dk],nil,bd);end)else do f[dl]=(f[dh]+f[dg]);end end end end end end end end end else do if not(df>74)then if not(df>61)then if not(df>55)then do if not(df>52)then if not(df<51)then if(df>51)then db=dh;else f[dl]=(f[dh]^f[dg]);end else do return f[di][dm]end end else do if not(df>bb)then local b,h,m do h=dl end m={f[h](f[h+1])}do b=0 end for s=h,dg do do b=(b+1);end do f[s]=m[b];end end else if(df<55)then f[dl]=f[dh][cx[dg]];else f[dl][f[dh]]=f[dg];end end end end end else if not(cy[31]>58)then if not(df<57)then do if(df>57)then local b,h,m b=cv[dh]m=nil h={}m=bw({},{__index=function(s,s)local s=h[s];return s[1][s[2]];end,__newindex=function(s,s,y)local s=h[s]s[1][s[2]]=y;end;});for s=1,dg do local y do y=cy[68][s]end if y[1]then h[(s-1)]={f,y[2],nil,nil,nil};else h[(s-1)]={t,y[2],nil};end;do dd[(#dd+1)]=h;end end;do f[cy[123]]=cr(b,m,bd);end else cx=br[cy[123]](cx)end end else cu[db]={[199]=0,[138]=19,[31]=df-l,[57]=3,[123]=12};db=(db-1);end else if not(df>59)then br=f else if(cy[31]>n)then f[dl]=bd[cx[dh]][cx[dg]];else f[dl]=(not(dh==0));db=(db+1);end end end end else if not(df>67)then if not(cy[31]<g)then if not(cy[31]>65)then if((cx[dl]<f[dg]))then do db=cy[57];end end;else if 66==cy[31]then f[cy[123]]={};else do return f[dl]end end end else if not(df>62)then if not f[dl]then db=dh;end;else if(df>j)then local b b=dl f[b]=f[b](f[b+1]);else br[dl]=f[cy[35]]end end end else if not(df>70)then if not(df<69)then if(df>69)then db=((cx[dl]<f[dg])and dh or db)else do cu[db]={[138]=0,[31]=df- -29,[57]=1,[199]=0,[123]=0};end db=(db-1);end else local b,g,h,j do b=cy[123]end g=((dg-1)*50)h=f[b]j=dh for l=1,j do h[(g+l)]=f[(b+l)]end;end else if not(df<73)then if 73==df then db=((f[dl]<f[dg])and dh or db)else end else if(df>71)then local b b=dl f[b]=f[b](cs(f,b+1,da));else br[cy[123]]={}end end end end end else if not(df>87)then if not(df>80)then if not(cy[31]<78)then if not(df>78)then local b b=dl f[b](cs(f,(b+1),da))else if(df>79)then local b,g,h,j g=dl b,h=cm(f[g](f[(g+1)]))da=(h+g-1)do j=0 end for h=g,da do j=(j+1);f[h]=b[j];end;else local b b=dl f[b](f[(b+1)])end end else do if not(df<76)then if(cy[31]>76)then f={};for b=0,cz do if(b<ct)then f[b]=dc[(b+1)];else break end;end;else f[dl]=(f[dh]*f[dg]);end else if(not(f[cy[123]]==f[dg]))then do db=dh;end end;end end end else if not(df>83)then if not(cy[31]>81)then local b,g b=dl g={}while#dd>0 do for h=1,#dd do local h=dd[h]for j=0,#h do local h=h[j]local j=h[1]local l=h[2]if j==f and l>=0 then g[l]=j[l]h[1]=g end end end break end return cs(f,b,da);else if(cy[k]>82)then local b,g g=dh b=f[g]do for h=(g+1),dg do do b=(b..f[h]);end end;end f[dl]=b;else if not f[dg]then do f[dl]=f[dg];end db=cy[57];end;end end else do if not(df>85)then if not(df~=84)then f[dl]=(not f[dh]);else do f[dj]=(function()f[dl]=cr(cv[dk],nil,bd);end)end end else do if(df<87)then local b,g,h g=dl b=f[g]h=dh for j=1,h do b[j]=f[(g+j)]end;else for b=dl,dh do f[b]=nil;end;end end end end end end else if not(df>93)then if not(df<91)then if not(df>91)then else do if(df<e)then f[dj]();elseif(not(f[dl]<f[dg]))then db=dh;end end end else if not(df>88)then local b b=dl do return cs(f,b,(b+cy[57]))end;else do if not(df~=89)then cu[db]={[57]=197,[199]=0,[138]=0,[31]=df-27,[123]=8};db=(db-1);else cu[db]=bp[dm];db=dh;end end end end else if not(cy[31]>96)then if not(df>94)then do f[dl]=(f[cy[57]]/f[dg]);end else if 95==cy[31]then do if((f[dl]>f[dg]))then db=dh;end;end else local b,e e=dl do b=f[dh]end f[(e+1)]=b;f[e]=b[cx[dg]];end end else if not(df<99)then if not(df~=99)then f[dl]=f[dh][f[cy[138]]];else local b b=f[cy[92]][dm]f[di][dm]=(b..f[dg]);end else do if(df>97)then local b do b={}end if(#dd>0)then for e=1,#dd do local g g=dd[e]do for e=0,#g do local h,j,k j=g[e]h=j[1]do k=j[2]end if(h==f and k>=0)then b[k]=h[k]j[1]=b end end end end end do return f[cy[123]],true;end else do bd=f[cy[dl]]end end end end end end end end end end do db=(db+1);end end;end;end bf=1439 else if bf<1465 then bf=1473 return cr(bo(bk()),{},bk())();else be=70;end end end else if bf<=1237 then if bf<1229 then bf=1237 cl=function()local b,e e,b=bv(bs,ca,(ca+2))ca=(ca+2);return((b*256)+e);end else bm=function()local b,e,f,g,h,j,k,l=67,59,70,36,30,99,91,17,67,93,79,31,17,60,17,73,86,25,92 while b~=30 do if e<=177 then if e<=96 then if e<92 then e=96 f,g,h,j,k,l=nil else e=143 l=co()end else if e<=143 then g=co()e=158 else if e<172 then if((l==0 and g==0))then do return 0 end end e=177 else f=((-1)^bg(31,g,1))e=219 end end end else if e<=291 then if e>=247 then if e>252 then j=1 e=332 else k=(bg(0,g,20)*4294967296+l)e=291 end else e=247 h=bg(20,g,11)end else if e>=368 then if e<404 then e=408 return(f*(2^(h-1023))*(k/bz+j))else break end else if not(h~=0)then if not(k==0)then do h=1 end j=0 else return(f*0)end elseif not(h==2047)then else if not(k~=i)then do return(f*(0/0))end else return(f*(1/0))end end e=368 end end end end end bf=1262 end else if bf<=1262 then cd=function(b,b,b)local b,e,f,g=48,49,37,40,30,53,43,22,93,71,41,84 while b~=35 do if e<=95 then if e<=49 then e=76 f,g=nil else if e<91 then e=95 g=co()else f=bs:sub(ca,(ca+g-1))e=139 end end else if e>=180 then if e>186 then b=35;else e=206 return f;end else e=180 ca=(ca+g);end end end end bf=1280 else if bf>1287 then bp={}bf=1316 else bf=1299 do cm=function(...)return{...},bj('#',...)end end end end end end end else if bf<=411 then if bf>=255 then if bf<=324 then if bf<=255 then bf=286 cg=string.rep else if bf<322 then bt=table.concat bf=324 else ci=table.insert bf=344 end end else if bf<=344 then bf=385 bh=math.ldexp else if bf>388 then bf=432 bw=setmetatable else bf=411 bk=(getfenv or function()return _ENV end)end end end else if bf>=162 then if bf>=187 then if bf<226 then bx=string.sub bf=233 else ce=string.gsub bf=255 end else ck=string.char bf=187 end else if bf<115 then bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=nil bf=123 else bf=162 bv=string.byte end end end else if bf>=606 then if bf>=681 then if bf>=716 then if bf<760 then bf=763 bs=cefunction(b,e,e)return cn[cq(b,16)]end)else cb={{0,1,2,3,c,5,6,7,8,9,10,11,12,13,q,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,r,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,a,13,12,},{4,z,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,p,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,u,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,x,o,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,w,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,v,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}bf=800 end else do for a=d,255 do cn[a]=ck(a);end end bf=716 end else if bf<=606 then bf=624 cs=(unpack or table.unpack)else if bf<642 then cq=tonumber bf=644 else cn={}bf=681 end end end else if bf<=469 then if bf>439 then cp=type bf=488 else bf=469 bj=select end else if bf<=488 then cf=(function(a,b,b,b)if not(cp(a)~='number')then do return true end else return false end end)bf=531 else if bf>536 then bf=606 cc=math.floor else do bi=math.abs end bf=570 end end end end end end end end)(14,47,4,0,93,138,65,11,0,63,31,2,5,60,15,1,14,7,18,165,3,2,14,14,57,5,138,53,49,1)
